---
layout: post
title:  "jekyll入门"
date:   2025-07-30 17:00:02 +0800
categories: jekyll update
---

# 前言

**什么是[Jekyll](https://jekyllrb.com/)?**

> Jekyll is a static site generator. It takes text written in your favorite markup language and uses layouts to create a static website. You can tweak the site’s look and feel, URLs, the data displayed on the page, and more.

**为什么选择Jekyll?**

此前也用过wordpress，以及尝试自己从0开始写一个blog等。但是搭建这样的站点的时间和维护成本对我而言过高，且其性能实在令人堪忧。将大量时间投入到站点建设本身也有违了我想要有一个简单的记录和输出内容的地方的初衷。在使用 git page 时，发现其推荐使用Jekyll，故前来一试。

# 快速开始

这里使用的系统及版本是 MACOS15.5，创建jekyll站点与本地运行步骤如下：

```tex
# 安装jekyll与bundler
gem install jekyll bundler
# 创建jekyll站点
jekyll new myblog
# 切换到博客根目录
cd myblog
# 运行
bundle exec jekyll serve
```

# Jekyll站点的目录结构

在执行`jekyll new myblog`命令后，目录如下：

```tex
.
├── _config.yml
├── _posts
│   └── 2025-08-01-welcome-to-jekyll.markdown
├── 404.html
├── about.markdown
├── Gemfile
├── Gemfile.lock
└── index.markdown
```

其中，我们需要重点关注这些目录及文件：

|    NAME     |                         DeSCRIPTION                          |
| :---------: | :----------------------------------------------------------: |
| _config.yml | 存储[配置](https://jekylldo.cn/docs/configuration/)数据，相当于网站设置或者网站的系统设置 |
|   _posts    |                    存放所有博客文章的目录                    |
|   Gemfile   |               一个用于描述 gem 之间依赖的文件                |

接着，在执行`bundle exec jekyll serve`命令后，我们会发现项目中多了一个叫做`_site`的目录，它似乎看上去包含了很的多内容，~~但其实这些都是些无关紧要的东西~~。我们可以注意到，在`_site`目录下有许多熟悉的“面孔”，如`404.html`、`index.html`，`welcome-to-jekyll.html`等文件。事实上，`_site`目录是jekyll根据你的文章、相关样式模板以及配置文件生成的网站的存放位置，修改这个目录下的文件可以暂时修改你的网站，但当你重新构建该网站时，你的修改会被再次覆盖掉。因此，我们无需过分关注这一部分内容。

```tex
.
├── _config.yml
├── _posts
│   └── 2025-08-01-welcome-to-jekyll.markdown
├── _site
│   ├── 404.html
│   ├── about
│   │   └── index.html
│   ├── assets
│   │   ├── main.css
│   │   ├── main.css.map
│   │   └── minima-social-icons.svg
│   ├── feed.xml
│   ├── index.html
│   └── jekyll
│       └── update
│           └── 2025
│               └── 08
│                   └── 01
│                       └── welcome-to-jekyll.html
├── 404.html
├── about.markdown
├── Gemfile
├── Gemfile.lock
└── index.markdown
```

到这里，一个基本的Jekyll站点就搭建完成了。使用`bundle exec jekyll serve`命令可以将该站点运行至本地的`4000`端口。访问http://127.0.0.1:4000/可以查看该站点的效果如下图所示。

![image-20250804014328791]({{ site.url }}/images/image-20250804014328791.png)

# 主题

使用jekyll创建项目时，会自动使用minima主题，其文件结构如下：

```tex
.
├── _includes
│   ├── disqus_comments.html
│   ├── footer.html
│   ├── google-analytics.html
│   ├── head.html
│   ├── header.html
│   ├── icon-github.html
│   ├── icon-github.svg
│   ├── icon-twitter.html
│   ├── icon-twitter.svg
│   └── social.html
├── _layouts
│   ├── default.html
│   ├── home.html
│   ├── page.html
│   └── post.html
├── _sass
│   ├── minima
│   │   ├── _base.scss
│   │   ├── _layout.scss
│   │   └── _syntax-highlighting.scss
│   └── minima.scss
├── assets
│   ├── main.scss
│   └── minima-social-icons.svg
├── LICENSE.txt
└── README.md
```
